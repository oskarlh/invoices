{"version":3,"sources":["components/invoicing/InvoicingList/styles.module.css","components/SimpleTable/styles.module.css","components/StyledTextArea/styles.module.css","components/invoicing/InvoicingNavMenu/styles.module.css","components/StyledInput/styles.module.css","components/StyledLink/styles.module.css","components/invoicing/InvoicingHeader/styles.module.css","components/invoicing/InvoicingApp/styles.module.css","components/StyledButton/styles.module.css","components/ThemeProvider/index.module.css","components/invoicing/InvoicingHeader/logo.svg","components/invoicing/InvoicingInvoiceForm/InvoicingLineItemsInput/styles.module.css","components/invoicing/InvoicingInvoiceForm/styles.module.css","components/invoicing/InvoicingMainContent/styles.module.css","components/i18n/definitions.ts","components/i18n/translations.ts","components/i18n/I18nContext.ts","components/i18n/findPreferredLanguage.ts","components/i18n/I18nProvider.tsx","components/i18n/useTranslation.ts","components/i18n/useCurrentLanguage.ts","components/i18n/Translate.tsx","utilities/index.ts","components/SimpleTable/index.tsx","components/StyledButton/index.tsx","components/StyledInput/index.tsx","components/StyledLink/index.tsx","components/StyledTextArea/index.tsx","components/ThemeProvider/index.tsx","data/invoicing/currencies.ts","components/invoicing/InvoicingCurrencySelector/index.tsx","components/invoicing/InvoicingHeader/index.tsx","components/invoicing/InvoicingInvoiceForm/InvoicingLineItemsInput/common.tsx","components/invoicing/InvoicingInvoiceForm/InvoicingLineItemsInput/DeleteButtonCell.tsx","components/invoicing/InvoicingInvoiceForm/InvoicingLineItemsInput/InputCell.tsx","components/invoicing/InvoicingInvoiceForm/InvoicingLineItemsInput/index.tsx","components/invoicing/InvoicingInvoiceForm/index.tsx","components/invoicing/InvoicingList/index.tsx","data/invoicing/mockBackendApi.ts","data/invoicing/actions.ts","components/invoicing/pages/pageRoutes.ts","components/invoicing/pages/InvoicingPage404/index.tsx","components/invoicing/pages/InvoicingPageInvoiceList/index.tsx","components/invoicing/pages/InvoicingPageCreateInvoice/index.tsx","components/invoicing/pages/InvoicingPageEditInvoice/index.tsx","components/invoicing/InvoicingMainContent/index.tsx","components/invoicing/InvoicingNavMenu/index.tsx","components/invoicing/InvoicingApp/index.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","supportedLanguages","translations","edit","en","sv","loading","logo","no","quantity","yes","I18nContext","createContext","displayName","findPreferredLanguage","navigator","languages","languagePreference","language","startsWith","I18nProvider","children","forcedLanguage","useState","setLanguage","useEffect","onLanguageChange","globalThis","addEventListener","removeEventListener","Provider","value","useTranslation","useContext","useCallback","label","Translate","translate","classNames","names","filter","n","join","typedMemo","memo","SimpleTableRow","columns","extraForCells","row","map","columnIndex","cell","cellClassName","key","className","Cell","extra","String","extraForComparators","extraForHeadings","rowKey","rows","indexOfColumnToSortBy","setIndexOfColumnToSortBy","columnToSortBy","undefined","length","descending","setDescending","unorderedRenderedRows","useMemo","rowIndex","compare","indiciesInSortedOrder","indices","keys","sort","indexA","indexB","valueA","valueB","orderedRenderedRows","result","index","reverse","renderedColumnsHeadings","column","onClick","cn","styles","activeColumnHeading","content","heading","table","tableBody","StyledButton","disabled","type","button","StyledInput","props","container","input","activeClassName","to","getProps","isCurrent","link","activeLink","defaultValue","name","onChange","labelText","textarea","event","target","ThemeProvider","themeProvider","currencies","formatCurrency","amount","currency","Intl","NumberFormat","style","format","activatedCurrency","InvoicingHeader","header","src","alt","extraEmptyItem","description","unitPrice","onDelete","aria-label","role","onValueChange","invoiceField","DeleteButtonCell","existingLineItems","items","setItems","stableItemsRef","Object","assign","item","newArray","i","field","newValue","newObject","Number","push","splice","indexOf","callbacks","existingInvoice","onCreate","onSaveChanges","setCurrency","dueDate","setDueDate","emailAddress","setEmailAddress","lineItems","setLineItems","notes","setNotes","Boolean","paid","setPaid","title","setTitle","sum","reduce","total","handleSubmit","preventDefault","newData","id","sendEmail","alert","onSubmit","checked","placeholder","required","overdueAriaLabel","isOverdue","Date","getTime","now","controlsLink","controlsCell","invoices","initialStorage","modelVersion","nextId","loadStorage","json","localStorage","getItem","data","JSON","parse","saveStorage","storage","setItem","stringify","loadList","listName","a","loadListItem","itemInStorage","find","Error","insertNewListItem","updateListItem","list","loadInvoiceList","invoice","pageRoutes","Component","defaultRoute","routingPath","usePromise","error","navMenuLabel","navMenuLinkPath","setSerror","saving","setSaving","createInvoice","then","navigateTo","catch","invoiceIdString","invoiceId","loadInvoice","loadError","saveError","setSaveSerror","updateInvoice","navigate","main","basepath","default","path","menu","App","app","headerAndMenu","window","location","hostname","match","ReactDOM","render","StrictMode","InvoicingApp","document","getElementById","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.2df3d9e6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2CYxk\",\"controlsCell\":\"styles_controlsCell__2thno\",\"controlsLink\":\"styles_controlsLink__QBm9Y\",\"table\":\"styles_table__19dST\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"styles_table__3ShGV\",\"activeColumnHeading\":\"styles_activeColumnHeading__3jYNk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1rgTU\",\"labelText\":\"styles_labelText__faqcr\",\"textarea\":\"styles_textarea__2B0aT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"styles_menu__3pfnh\",\"link\":\"styles_link__DZOza\",\"activeLink\":\"styles_activeLink__22bo6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__yyfEU\",\"input\":\"styles_input__1pBaB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"styles_link__22rl5\",\"activeLink\":\"styles_activeLink__3Vxrn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__3GNOB\",\"logo\":\"styles_logo__3vo9k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"styles_app__2kGhL\",\"headerAndMenu\":\"styles_headerAndMenu__KiQ_A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__2SJjC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeProvider\":\"ThemeProvider_themeProvider__1hUB0\"};","module.exports = __webpack_public_path__ + \"static/media/logo.29e71b12.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"styles_table__EKXfk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1Ddpw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__EEBhq\",\"pageContainer\":\"styles_pageContainer__3cBXU\"};","import * as data from './translations';\n\nexport type Language = typeof data.supportedLanguages[number];\nexport type TextsByLanguage = Record<Language, string>;\nexport type Label = keyof typeof data.translations;\nexport type TranslationsMap = Record<Label, TextsByLanguage>;\n\nexport const fallbackLanguage: Language = data.fallbackLanguage;\nexport const supportedLanguages: readonly Language[] = data.supportedLanguages;\nexport const translations: TranslationsMap = data.translations;\n","// All supported languages\nexport const supportedLanguages = ['en', 'sv'] as const;\n\n// Language to use if no supported language is found in navigator.languages\nexport const fallbackLanguage = 'en';\n\n// All translations\nexport const translations = {\n  edit: {\n    en: 'Edit',\n    sv: 'Redigera',\n  },\n  'invoicing/app name': {\n    en: 'Invoicing App 1.0',\n    sv: 'Faktureringsapp 1.0',\n  },\n  'invoicing/choose currency': {\n    en: 'Choose currency:',\n    sv: 'Välj valuta:',\n  },\n  'invoicing/create invoice': {\n    en: 'Create invoice',\n    sv: 'Skapa faktura',\n  },\n  'invoicing/due date': {\n    en: 'Due date',\n    sv: 'Förfallodatum',\n  },\n  'invoicing/email invoice': {\n    en: 'Send email',\n    sv: 'Skicka e-postmeddelande',\n  },\n  'invoicing/email sent to': {\n    en: 'Invoice sent to ',\n    sv: 'Faktura skickad till ',\n  },\n  'invoicing/email to': {\n    en: 'Email to',\n    sv: 'E-posta till',\n  },\n  'invoicing/invoices': {\n    en: 'Invoices',\n    sv: 'Fakturor',\n  },\n  'invoicing/item description': {\n    en: 'Description',\n    sv: 'Beskrivning',\n  },\n  'invoicing/notes': {\n    en: 'Notes/instructions',\n    sv: 'Anteckningar/anvisningar',\n  },\n  'invoicing/overdue': {\n    en: 'Overdue',\n    sv: 'Försenad',\n  },\n  'invoicing/page not found': {\n    en: 'Page not found',\n    sv: 'Sidan kunde inte hittas',\n  },\n  'invoicing/paid': {\n    en: 'Paid',\n    sv: 'Betald',\n  },\n  'invoicing/price per item': {\n    en: 'Unit price',\n    sv: 'Á-pris',\n  },\n  'invoicing/save changes': {\n    en: 'Save changes',\n    sv: 'Spara ändringar',\n  },\n  'invoicing/title': {\n    en: 'Title',\n    sv: 'Titel',\n  },\n  'invoicing/total': {\n    en: 'Total',\n    sv: 'Att betala',\n  },\n  loading: {\n    en: 'Loading...',\n    sv: 'Laddar...',\n  },\n  logo: {\n    en: 'Logo',\n    sv: 'Logga',\n  },\n  no: {\n    en: 'No',\n    sv: 'Nej',\n  },\n  quantity: {\n    en: 'Quantity',\n    sv: 'Antal',\n  },\n  'saving changes': {\n    en: 'Saving changes...',\n    sv: 'Sparar ändringar...',\n  },\n  yes: {\n    en: 'Yes',\n    sv: 'Ja',\n  },\n} as const;\n","import { createContext } from 'react';\nimport { fallbackLanguage } from './definitions';\n\nconst I18nContext = createContext(fallbackLanguage);\nI18nContext.displayName = 'I18nContext';\nexport default I18nContext;\n","import { fallbackLanguage, supportedLanguages, Language } from './definitions';\n\nexport default function findPreferredLanguage(): Language {\n  for (const languagePreference of navigator.languages) {\n    for (const language of supportedLanguages) {\n      if (languagePreference.startsWith(language)) {\n        return language;\n      }\n    }\n  }\n  return fallbackLanguage;\n}\n","import React, { ReactElement, ReactNode, useEffect, useState } from 'react';\nimport I18nContext from './I18nContext';\nimport { Language } from './definitions';\nimport findPreferredLanguage from './findPreferredLanguage';\n\nexport interface Props {\n  children: ReactNode;\n  language?: Language;\n}\n\nexport default function I18nProvider({\n  children,\n  language: forcedLanguage,\n}: Props): ReactElement {\n  const [language, setLanguage] = useState(() => findPreferredLanguage());\n\n  // Change language if the user changes language preferences in their browser settings\n  useEffect(() => {\n    const onLanguageChange = () => {\n      setLanguage(findPreferredLanguage());\n    };\n    globalThis.addEventListener('languagechange', onLanguageChange);\n    return () =>\n      globalThis.removeEventListener('languagechange', onLanguageChange);\n  }, []);\n\n  return (\n    <I18nContext.Provider value={forcedLanguage || language}>\n      {children}\n    </I18nContext.Provider>\n  );\n}\n","import { useCallback } from 'react';\nimport useCurrentLanguage from './useCurrentLanguage';\nimport { translations, Label } from './definitions';\n\nexport default function useTranslation(): (label: Label) => string {\n  const language = useCurrentLanguage();\n  return useCallback(\n    (label: Label): string => {\n      return translations[label][language];\n    },\n    [language]\n  );\n}\n","import { useContext } from 'react';\nimport I18nContext from './I18nContext';\nimport { Language } from './definitions';\n\nexport default function useCurrentLanguage(): Language {\n  return useContext(I18nContext);\n}\n","import React from 'react';\nimport { Label } from './definitions';\nimport useTranslation from './useTranslation';\n\nexport interface Props {\n  label?: Label;\n}\n\nexport default function Translate({ label }: Props) {\n  const translate = useTranslation();\n  return <>{label && translate(label)}</>;\n}\n","import { memo } from 'react';\n\ntype ClassName = string | false | null | undefined;\nexport function classNames(...names: ClassName[]): string {\n  return names.filter((n) => !!n).join(' ');\n}\n\n// Memo has a bad type so you can't just use it straight with generic components.\n// Setting the type like this fixes the issue.\nexport const typedMemo: <T>(c: T) => T = memo;\n","import React, { ReactElement, useMemo, useState } from 'react';\n\nimport { CellComponent, SimpleTableColumn, SimpleTableProps } from './types';\n\nimport styles from './styles.module.css';\nimport { classNames, typedMemo } from 'utilities';\n\nconst SimpleTableRow = typedMemo(function <Row>({\n  columns,\n  extraForCells,\n  row,\n}: {\n  columns: SimpleTableColumn<Row>[];\n  extraForCells?: any;\n  row: Row;\n}): ReactElement {\n  return (\n    <tr>\n      {columns.map(({ cell, cellClassName }, columnIndex) => (\n        <td key={columnIndex} className={cellClassName}>\n          {(() => {\n            if (typeof cell === 'function' || typeof cell === 'object') {\n              const Cell = cell as CellComponent<Row>;\n              return <Cell extra={extraForCells} row={row as Row} />;\n            } else {\n              return String((row as Row)[cell as keyof Row]);\n            }\n          })()}\n        </td>\n      ))}\n    </tr>\n  );\n});\n\nfunction SimpleTable<Row>({\n  className,\n  columns,\n  extraForCells,\n  extraForComparators,\n  extraForHeadings,\n  rowKey,\n  rows,\n}: SimpleTableProps<Row>): ReactElement {\n  const [indexOfColumnToSortBy, setIndexOfColumnToSortBy] = useState<\n    number | undefined\n  >();\n  const columnToSortBy =\n    indexOfColumnToSortBy !== undefined &&\n    indexOfColumnToSortBy < columns.length\n      ? columns[indexOfColumnToSortBy]\n      : undefined;\n\n  const [descending, setDescending] = useState(false);\n\n  const unorderedRenderedRows = useMemo(\n    () =>\n      rows.map((row, rowIndex) => {\n        let key: string = '' + rowIndex;\n        if (typeof rowKey === 'function') {\n          key = 'a' + rowKey(row);\n        } else if (rowKey !== undefined) {\n          key = 'b' + String(row[rowKey]);\n        }\n        return (\n          <SimpleTableRow\n            columns={columns}\n            extraForCells={extraForCells}\n            key={key}\n            row={row}\n          />\n        );\n      }),\n    [columns, extraForCells, rowKey, rows]\n  );\n\n  const compare = columnToSortBy?.compare;\n  const indiciesInSortedOrder = useMemo(() => {\n    const indices = [...rows.keys()];\n    if (typeof compare === 'function') {\n      indices.sort((indexA, indexB) =>\n        compare(rows[indexA], rows[indexB], extraForComparators)\n      );\n    } else if (compare) {\n      indices.sort((indexA, indexB) => {\n        const valueA = rows[indexA][compare];\n        const valueB = rows[indexB][compare];\n        return +(valueA > valueB) - +(valueA < valueB);\n      });\n    }\n    return indices;\n  }, [compare, extraForComparators, rows]);\n\n  const orderedRenderedRows = useMemo(() => {\n    const result = indiciesInSortedOrder.map(\n      (index) => unorderedRenderedRows[index]\n    );\n    if (descending) {\n      result.reverse();\n    }\n    return result;\n  }, [indiciesInSortedOrder, unorderedRenderedRows, descending]);\n\n  const renderedColumnsHeadings = useMemo(() => {\n    return columns.map((column, index) => {\n      const onClick =\n        column.compare === undefined\n          ? undefined\n          : () => {\n              setIndexOfColumnToSortBy(\n                columnToSortBy === column && descending ? undefined : index\n              );\n              setDescending(columnToSortBy === column);\n            };\n      const cn = column === columnToSortBy ? styles.activeColumnHeading : '';\n      const content =\n        typeof column.heading === 'function' ||\n        typeof column.heading === 'object' ? (\n          <column.heading extra={extraForHeadings} />\n        ) : (\n          column.heading\n        );\n\n      return (\n        <td className={cn} key={index} onClick={onClick}>\n          {content}\n        </td>\n      );\n    });\n  }, [columnToSortBy, columns, descending, extraForHeadings]);\n\n  return (\n    <table className={classNames(styles.table, className)}>\n      <thead>\n        <tr>{renderedColumnsHeadings}</tr>\n      </thead>\n      <tbody className={styles.tableBody}>{orderedRenderedRows}</tbody>\n    </table>\n  );\n}\n\nexport default typedMemo(SimpleTable);\n","import React, { ReactElement, ReactNode } from 'react';\nimport { classNames } from 'utilities';\nimport styles from './styles.module.css';\n\nexport interface Props {\n  children: ReactNode;\n  className?: string;\n  disabled?: boolean;\n  onClick?: () => void;\n  type?: 'button' | 'reset' | 'submit';\n}\n\nexport default function StyledButton({\n  children,\n  className,\n  disabled,\n  onClick,\n  type = 'button',\n}: Props): ReactElement {\n  return (\n    <button\n      className={classNames(\n        styles.button,\n        typeof className === 'string' && className\n      )}\n      disabled={disabled}\n      onClick={onClick}\n      type={type}\n    >\n      {children}\n    </button>\n  );\n}\n","import React from 'react';\nimport { classNames } from 'utilities';\nimport styles from './styles.module.css';\n\nexport default function StyledInput({ ...props }) {\n  const className: string =\n    typeof props.className === 'string' ? props.className : '';\n  return (\n    <div className={styles.container}>\n      <input {...props} className={classNames(styles.input, className)} />\n    </div>\n  );\n}\n","import React, { memo, ReactNode } from 'react';\nimport { Link } from '@reach/router';\n\nimport { classNames } from 'utilities';\n\nimport styles from './styles.module.css';\n\nexport interface Props {\n  activeClassName?: string;\n  children: ReactNode;\n  className?: string;\n  to: string;\n}\n\nexport default memo(function StyledLink({\n  activeClassName,\n  children,\n  className,\n  to,\n}: Props) {\n  const getProps = ({ isCurrent }: { isCurrent: boolean }) => ({\n    className: classNames(\n      styles.link,\n      className,\n      isCurrent && styles.activeLink,\n      isCurrent && activeClassName\n    ),\n  });\n\n  return (\n    <Link getProps={getProps} to={to}>\n      {children}\n    </Link>\n  );\n});\n","import React, { memo, ReactNode } from 'react';\nimport { classNames } from 'utilities';\nimport styles from './styles.module.css';\n\nexport interface Props {\n  className?: string;\n  children?: ReactNode; // A label\n  name?: string;\n  onChange?: (newValue: string) => void;\n  defaultValue?: string;\n  value?: string;\n}\n\nfunction StyledTextArea({\n  className,\n  children,\n  defaultValue,\n  name,\n  onChange,\n  value,\n}: Props) {\n  return (\n    <label className={styles.container}>\n      <span className={styles.labelText}>{children}</span>\n      <textarea\n        className={classNames(styles.textarea, className)}\n        defaultValue={defaultValue}\n        rows={4}\n        name={name}\n        onChange={\n          onChange\n            ? (event) => {\n                onChange(event.target.value);\n              }\n            : undefined\n        }\n        value={value}\n      />\n    </label>\n  );\n}\n\nexport default memo(StyledTextArea);\n","import React, { ReactElement, ReactNode } from 'react';\nimport styles from './index.module.css';\n\nexport interface Props {\n  children: ReactNode;\n}\n\nexport default function ThemeProvider({ children }: Props): ReactElement {\n  return <div className={styles.themeProvider}>{children}</div>;\n}\n","export const currencies = ['DKK', 'EUR', 'NOK', 'SEK', 'TWD', 'USD'] as const;\nexport type Currency = typeof currencies[number];\nexport const defaultCurrency: Currency = 'SEK';\n\nexport function formatCurrency(amount: number, currency: Currency) {\n  const formatter = new Intl.NumberFormat(undefined, {\n    currency,\n    style: 'currency',\n  });\n  return formatter.format(amount);\n}\n","import React, { memo } from 'react';\nimport { currencies, Currency } from 'data/invoicing/currencies';\nimport { useTranslation } from 'components/i18n';\nimport { StyledButton } from 'components';\n\nexport interface Props {\n  currency?: Currency;\n  onChange?: (newCurrency: Currency) => void;\n}\n\nfunction InvoicingCurrencySelector({\n  currency: activatedCurrency,\n  onChange,\n}: Props) {\n  const translate = useTranslation();\n\n  return (\n    <div>\n      {translate('invoicing/choose currency') + ' '}\n      {currencies.map((currency) => (\n        <StyledButton\n          disabled={currency === activatedCurrency}\n          key={currency}\n          onClick={onChange ? () => onChange(currency) : undefined}\n        >\n          {currency}\n        </StyledButton>\n      ))}\n    </div>\n  );\n}\n\nexport default memo(InvoicingCurrencySelector);\n","import React from 'react';\n\nimport { classNames } from 'utilities';\nimport { useTranslation } from 'components/i18n';\n\nimport styles from './styles.module.css';\nimport logo from './logo.svg';\n\nexport interface Props {\n  className?: string;\n}\n\nexport default function InvoicingHeader({ className }: Props) {\n  const translate = useTranslation();\n  return (\n    <header className={classNames(styles.header, className)}>\n      <img src={logo} className={styles.logo} alt={translate('logo')} />\n      <h1>{translate('invoicing/app name')}</h1>\n    </header>\n  );\n}\n","import { InvoiceLineItem } from 'data/invoicing/types';\n\nexport interface Callbacks {\n  onDelete: (item: InvoiceLineItem) => void;\n  onValueChange: (\n    field: keyof InvoiceLineItem,\n    newValue: string,\n    item: InvoiceLineItem\n  ) => void;\n}\n\nexport const extraEmptyItem: InvoiceLineItem = {\n  description: '',\n  quantity: 1,\n  unitPrice: 0,\n};\n","import React, { memo } from 'react';\n\nimport { StyledButton } from 'components';\nimport { InvoiceLineItem } from 'data/invoicing/types';\n\nimport { Callbacks, extraEmptyItem } from './common';\n\nfunction DeleteButtonCell({\n  extra: { onDelete },\n  row,\n}: {\n  extra: Callbacks;\n  row: InvoiceLineItem;\n}) {\n  return (\n    <StyledButton\n      disabled={row === extraEmptyItem}\n      onClick={() => onDelete(row)}\n    >\n      <span aria-label=\"Delete\" role=\"img\">\n        ❌\n      </span>\n    </StyledButton>\n  );\n}\n\nexport default memo(DeleteButtonCell);\n","import React, { memo } from 'react';\n\nimport { StyledInput } from 'components';\nimport { InvoiceLineItem } from 'data/invoicing/types';\n\nimport { Callbacks } from './common';\n\nfunction InputCell({\n  extra: { onValueChange },\n  invoiceField,\n  row,\n  type,\n}: {\n  extra: Callbacks;\n  invoiceField: keyof InvoiceLineItem;\n  row: InvoiceLineItem;\n  type: string;\n}) {\n  return (\n    <StyledInput\n      type={type}\n      onChange={(event: React.FormEvent<HTMLInputElement>) => {\n        onValueChange(\n          invoiceField,\n          (event.target as HTMLInputElement).value,\n          row\n        );\n      }}\n      value={row[invoiceField]}\n    />\n  );\n}\n\nexport default memo(InputCell);\n","import React, {\n  memo,\n  ReactElement,\n  useCallback,\n  useMemo,\n  useState,\n} from 'react';\nimport { InvoiceLineItem } from 'data/invoicing/types';\nimport { SimpleTable, SimpleTableColumn } from 'components';\nimport { Translate } from 'components/i18n';\n\nimport DeleteButtonCell from './DeleteButtonCell';\nimport InputCell from './InputCell';\nimport { Callbacks, extraEmptyItem } from './common';\n\nimport styles from './styles.module.css';\n\nexport interface Props {\n  existingLineItems?: InvoiceLineItem[];\n  onChange?: (items: InvoiceLineItem[]) => void;\n}\n\nconst columns: SimpleTableColumn<InvoiceLineItem>[] = [\n  {\n    cell: (props) => (\n      <InputCell invoiceField=\"description\" type=\"text\" {...props} />\n    ),\n    compare: 'description',\n    heading: () => <Translate label=\"invoicing/item description\" />,\n  },\n  {\n    cell: (props) => (\n      <InputCell invoiceField=\"quantity\" type=\"number\" {...props} />\n    ),\n    heading: () => <Translate label=\"quantity\" />,\n  },\n  {\n    cell: (props) => (\n      <InputCell invoiceField=\"unitPrice\" type=\"number\" {...props} />\n    ),\n    heading: () => <Translate label=\"invoicing/price per item\" />,\n  },\n  {\n    cell: DeleteButtonCell,\n  },\n];\n\nfunction InvoicingLineItemsInput({\n  existingLineItems,\n  onChange,\n}: Props): ReactElement {\n  const [items, setItems] = useState(() => [...(existingLineItems || [])]);\n\n  const stableItemsRef = Object.assign(useState({}), {\n    items,\n  });\n\n  const onDelete = useCallback(\n    (item: InvoiceLineItem) => {\n      const newArray = stableItemsRef.items.filter((i) => i !== item);\n      setItems(newArray);\n      onChange && onChange(newArray);\n    },\n    [stableItemsRef, onChange]\n  );\n\n  const onValueChange = useCallback(\n    (field: keyof InvoiceLineItem, newValue: string, item: InvoiceLineItem) => {\n      const newObject: InvoiceLineItem = {\n        ...item,\n        [field]: field === 'description' ? newValue : Number(newValue),\n      };\n\n      const newArray: InvoiceLineItem[] = [...stableItemsRef.items];\n      if (item === extraEmptyItem) {\n        newArray.push(newObject);\n      } else {\n        newArray.splice(newArray.indexOf(item), 1, newObject);\n      }\n      setItems(newArray);\n      onChange && onChange(newArray);\n    },\n    [stableItemsRef, onChange]\n  );\n\n  const callbacks: Callbacks = useMemo(\n    () => ({\n      onDelete,\n      onValueChange,\n    }),\n    [onDelete, onValueChange]\n  );\n\n  return (\n    <SimpleTable<InvoiceLineItem>\n      className={styles.table}\n      columns={columns}\n      extraForCells={callbacks}\n      rows={[...items, extraEmptyItem]}\n    />\n  );\n}\n\nexport default memo(InvoicingLineItemsInput);\n","import React, { memo, useCallback, useMemo, useState } from 'react';\n\nimport { Invoice, WithoutId } from 'data/invoicing/types';\nimport InvoicingLineItemsInput from './InvoicingLineItemsInput';\nimport { useTranslation } from 'components/i18n';\nimport { InvoicingCurrencySelector } from 'components/invoicing';\nimport { StyledButton, StyledTextArea } from 'components';\nimport {\n  Currency,\n  defaultCurrency,\n  formatCurrency,\n} from 'data/invoicing/currencies';\n\nimport styles from './styles.module.css';\nimport StyledInput from 'components/StyledInput';\n\nexport interface Props {\n  existingInvoice?: Invoice;\n  onCreate?: (invoice: WithoutId<Invoice>) => void;\n  onSaveChanges?: (invoice: Invoice) => void;\n}\n\nfunction InvoicingInvoiceForm({\n  existingInvoice,\n  onCreate,\n  onSaveChanges,\n}: Props) {\n  const translate = useTranslation();\n\n  const [currency, setCurrency] = useState<Currency>(\n    existingInvoice?.currency || defaultCurrency\n  );\n  const [dueDate, setDueDate] = useState<string>(\n    existingInvoice?.dueDate || ''\n  );\n  const [emailAddress, setEmailAddress] = useState<string>(\n    existingInvoice?.emailAddress || ''\n  );\n  const [lineItems, setLineItems] = useState(existingInvoice?.lineItems || []);\n  const [notes, setNotes] = useState<string>(existingInvoice?.notes || '');\n  const [paid, setPaid] = useState(Boolean(existingInvoice?.paid));\n  const [title, setTitle] = useState(existingInvoice?.title || '');\n\n  const sum = useMemo(\n    () =>\n      (lineItems || []).reduce(\n        (total, { quantity, unitPrice }) => total + quantity * unitPrice,\n        0\n      ),\n    [lineItems]\n  );\n\n  const handleSubmit = useCallback(\n    (event) => {\n      event.preventDefault();\n\n      const newData: WithoutId<Invoice> = {\n        currency,\n        dueDate,\n        emailAddress,\n        lineItems,\n        notes,\n        paid,\n        title,\n      };\n\n      if (existingInvoice) {\n        onSaveChanges && onSaveChanges({ id: existingInvoice.id, ...newData });\n      } else {\n        onCreate && onCreate(newData);\n      }\n    },\n    [\n      currency,\n      dueDate,\n      emailAddress,\n      existingInvoice,\n      lineItems,\n      notes,\n      onCreate,\n      onSaveChanges,\n      paid,\n      title,\n    ]\n  );\n\n  const sendEmail = useCallback(() => {\n    globalThis.alert(translate('invoicing/email sent to') + emailAddress);\n  }, [emailAddress, translate]);\n\n  return (\n    <section className={styles.container}>\n      <form onSubmit={handleSubmit}>\n        <p>\n          <StyledButton type=\"submit\">\n            {translate(\n              existingInvoice\n                ? 'invoicing/save changes'\n                : 'invoicing/create invoice'\n            )}\n          </StyledButton>\n          <StyledButton disabled={!emailAddress} onClick={sendEmail}>\n            {translate('invoicing/email invoice')}\n          </StyledButton>\n          {' ' +\n            translate('invoicing/total') +\n            ': ' +\n            formatCurrency(sum, currency) +\n            ' '}\n\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={paid}\n              onChange={(event: any) => {\n                setPaid(event.target.checked);\n              }}\n            />\n            {translate('invoicing/paid')}\n          </label>\n        </p>\n        <StyledInput\n          type=\"text\"\n          placeholder={translate('invoicing/title')}\n          value={title}\n          onChange={(event: any) => {\n            setTitle(event.target.value);\n          }}\n          required\n        />\n        <StyledInput\n          type=\"email\"\n          placeholder={translate('invoicing/email to')}\n          value={emailAddress}\n          onChange={(event: any) => {\n            setEmailAddress(event.target.value);\n          }}\n        />\n        <StyledInput\n          type=\"date\"\n          title={translate('invoicing/due date')}\n          value={dueDate}\n          onChange={(event: any) => {\n            setDueDate(event.target.value);\n          }}\n          required\n        />\n        <StyledTextArea value={notes} onChange={setNotes}>\n          {translate('invoicing/notes')}\n        </StyledTextArea>\n        <InvoicingCurrencySelector currency={currency} onChange={setCurrency} />\n        <InvoicingLineItemsInput\n          existingLineItems={existingInvoice?.lineItems}\n          onChange={setLineItems}\n        />\n      </form>\n    </section>\n  );\n}\nexport default memo(InvoicingInvoiceForm);\n","import React, { memo, ReactElement } from 'react';\n\nimport { Translate, useTranslation } from 'components/i18n';\nimport { Invoice } from 'data/invoicing/types';\n\nimport { SimpleTable, SimpleTableColumn, StyledLink } from 'components';\nimport { formatCurrency } from 'data/invoicing/currencies';\n\nimport styles from './styles.module.css';\n\nfunction TotalCell({\n  row: { currency, lineItems },\n}: {\n  row: Invoice;\n}): ReactElement {\n  const sum = lineItems.reduce(\n    (total, { quantity, unitPrice }) => total + quantity * unitPrice,\n    0\n  );\n  return <>{formatCurrency(sum, currency)}</>;\n}\n\nfunction ControlsCell({ row: { id } }: { row: Invoice }) {\n  return (\n    <>\n      <StyledLink className={styles.controlsLink} to={'edit/' + id}>\n        <Translate label=\"edit\" />\n      </StyledLink>\n    </>\n  );\n}\n\nfunction DueDateCell({ row: { dueDate, paid } }: { row: Invoice }) {\n  const overdueAriaLabel = useTranslation()('invoicing/overdue');\n  // TODO: Handle time zone differences somehow\n  const isOverdue = !paid && new Date(dueDate).getTime() >= Date.now();\n  return (\n    <>\n      {isOverdue && (\n        <span aria-label={overdueAriaLabel} role=\"img\">\n          ⚠️\n        </span>\n      )}\n      {dueDate}\n    </>\n  );\n}\n\nfunction PaidCell({ row: { paid } }: { row: Invoice }) {\n  return <Translate label={paid ? 'yes' : 'no'} />;\n}\n\nconst columns: SimpleTableColumn<Invoice>[] = [\n  {\n    cell: PaidCell,\n    compare: 'paid',\n    heading: () => <Translate label=\"invoicing/paid\" />,\n  },\n  {\n    cell: 'title',\n    compare: 'title',\n    heading: () => <Translate label=\"invoicing/title\" />,\n  },\n  {\n    cell: 'emailAddress',\n    compare: 'emailAddress',\n    heading: () => <Translate label=\"invoicing/email to\" />,\n  },\n  {\n    cell: DueDateCell,\n    compare: 'dueDate',\n    heading: () => <Translate label=\"invoicing/due date\" />,\n  },\n  {\n    cell: TotalCell,\n    compare: 'currency',\n    heading: () => <Translate label=\"invoicing/total\" />,\n  },\n  {\n    cell: ControlsCell,\n    cellClassName: styles.controlsCell,\n  },\n];\n\nexport interface Props {\n  invoices: Invoice[];\n}\n\nfunction InvoicingList({ invoices }: Props) {\n  return (\n    <div className={styles.container}>\n      <SimpleTable\n        className={styles.table}\n        columns={columns}\n        rows={invoices}\n        rowKey=\"id\"\n      />\n    </div>\n  );\n}\n\nexport default memo(InvoicingList);\n","import { HasId, Id, Invoice, WithoutId } from './types';\n\nconst localStorageKey = 'invoicing';\n\nconst modelVersion = 1; // Change this to clear local storage while developing\n\ninterface Storage {\n  modelVersion: number;\n  nextId: Id;\n  invoices: Invoice[];\n}\n\nconst initialStorage: Storage = {\n  invoices: [\n    {\n      currency: 'SEK',\n      dueDate: '2020-10-20',\n      emailAddress: 'julia@example.com',\n      id: 451,\n      lineItems: [\n        {\n          description: 'Potatoes',\n          quantity: 100,\n          unitPrice: 2.5,\n        },\n      ],\n      notes: 'Julia bought 100 potatoes. Time to pay.',\n      paid: false,\n      title: 'Purchase of 100 potatoes',\n    },\n    {\n      currency: 'EUR',\n      dueDate: '2020-04-12',\n      emailAddress: 'marko@example.com',\n      id: 123,\n      lineItems: [\n        {\n          description: 'Car, Volvo',\n          quantity: 1,\n          unitPrice: 250_000,\n        },\n        {\n          description: 'Router, MikroTik',\n          quantity: 2,\n          unitPrice: 12012,\n        },\n      ],\n      notes: 'I should probably write payment instructions here...',\n      paid: false,\n      title: 'Car & Router',\n    },\n  ],\n  modelVersion,\n  nextId: 20380451,\n};\n\ntype ListName = Exclude<keyof Storage, 'modelVersion' | 'nextId'>;\ntype ItemInList<LN extends ListName> = Storage[LN][Id];\n\nfunction loadStorage(): Storage {\n  const json = localStorage.getItem(localStorageKey);\n  const data = json ? JSON.parse(json) : null;\n  return data && data.modelVersion === modelVersion ? data : initialStorage;\n}\n\nfunction saveStorage(storage: Storage) {\n  localStorage.setItem(localStorageKey, JSON.stringify(storage));\n}\n\nexport async function loadList<LN extends ListName>(\n  listName: LN\n): Promise<ItemInList<LN>[]> {\n  return loadStorage()[listName];\n}\n\nexport async function loadListItem<LN extends ListName>(\n  listName: LN,\n  id: Id\n): Promise<ItemInList<LN>> {\n  const itemInStorage: ItemInList<LN> | undefined = loadStorage()[\n    listName\n  ].find(({ id: itemId }) => itemId === id);\n\n  if (!itemInStorage) {\n    throw new Error('Item not found');\n  }\n  return itemInStorage;\n}\n\nexport async function insertNewListItem<LN extends ListName>(\n  listName: LN,\n  item: WithoutId<ItemInList<LN>>\n): Promise<ItemInList<LN>> {\n  const storage = loadStorage();\n  const itemInStorage = {\n    ...item,\n    id: storage.nextId++,\n  };\n  storage[listName].push(itemInStorage);\n  saveStorage(storage);\n  return itemInStorage;\n}\n\nexport async function updateListItem<LN extends ListName>(\n  listName: LN,\n  item: Partial<ItemInList<LN>> & HasId\n): Promise<ItemInList<LN>> {\n  const storage = loadStorage();\n  const list = storage[listName];\n  const itemInStorage: ItemInList<LN> | undefined = list.find(\n    ({ id }) => id === item.id\n  );\n  if (!itemInStorage) {\n    throw new Error('Item not found');\n  }\n  Object.assign(itemInStorage, item);\n  saveStorage(storage);\n  return itemInStorage;\n}\n\nexport async function deleteListItem<LN extends ListName>(\n  listName: LN,\n  id: Id\n) {\n  const storage = loadStorage();\n  const list = storage[listName];\n  const index = list.findIndex((item) => item.id === id);\n  if (index === -1) {\n    throw new Error('Item not found');\n  }\n  list.splice(index, 1);\n}\n","import { Id, Invoice, WithoutId } from './types';\nimport {\n  insertNewListItem,\n  loadList,\n  loadListItem,\n  updateListItem,\n} from './mockBackendApi';\n\nexport async function loadInvoice(id: Id): Promise<Invoice> {\n  return loadListItem('invoices', id);\n}\n\nexport async function loadInvoiceList(): Promise<Invoice[]> {\n  return loadList('invoices');\n}\n\nexport async function createInvoice(\n  invoice: WithoutId<Invoice>\n): Promise<Invoice> {\n  return insertNewListItem('invoices', invoice);\n}\n\nexport async function updateInvoice(invoice: Invoice): Promise<Invoice> {\n  return updateListItem('invoices', invoice);\n}\n","import { ComponentType } from 'react';\nimport { RouteComponentProps, navigate } from '@reach/router';\n\nimport { Label } from 'components/i18n';\n\nimport InvoicingPage404 from './InvoicingPage404';\nimport InvoicingPageCreateInvoice from './InvoicingPageCreateInvoice';\nimport InvoicingPageEditInvoice from './InvoicingPageEditInvoice';\nimport InvoicingPageInvoiceList from './InvoicingPageInvoiceList';\n\ninterface PageRoute {\n  Component: ComponentType<RouteComponentProps>;\n  defaultRoute?: boolean;\n  navMenuLabel?: Label;\n  navMenuLinkPath?: string;\n  routingPath: string;\n}\n\nexport const pageRoutes: readonly PageRoute[] = [\n  {\n    Component: InvoicingPage404,\n    defaultRoute: true,\n    routingPath: '404',\n  },\n  {\n    Component: InvoicingPageInvoiceList,\n    navMenuLabel: 'invoicing/invoices',\n    navMenuLinkPath: '/',\n    routingPath: '/',\n  },\n  {\n    Component: InvoicingPageCreateInvoice,\n    navMenuLabel: 'invoicing/create invoice',\n    navMenuLinkPath: '/create',\n    routingPath: '/create',\n  },\n  {\n    Component: InvoicingPageEditInvoice,\n    routingPath: '/edit/:invoiceId',\n  },\n];\n\nexport const rootPathPrefix = '/invoices';\n\nexport function navigateTo(to: string) {\n  navigate(to.startsWith('/') ? rootPathPrefix + to : to);\n}\n","import React, { ReactElement } from 'react';\nimport { RouteComponentProps } from '@reach/router';\n\nimport { useTranslation } from 'components/i18n';\n\nexport default function InvoicingPageInvoiceList(\n  props: RouteComponentProps\n): ReactElement {\n  const translate = useTranslation();\n  return <div>{translate('invoicing/page not found')}</div>;\n}\n","import React, { ReactElement } from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport usePromise from 'react-use-promise';\n\nimport { InvoicingList } from 'components/invoicing';\nimport { loadInvoiceList } from 'data/invoicing/actions';\n\nexport default function InvoicingPageInvoiceList(\n  props: RouteComponentProps\n): ReactElement {\n  const [invoices, error] = usePromise(loadInvoiceList, []);\n\n  if (error) {\n    return <>{'' + error}</>;\n  }\n\n  return <InvoicingList invoices={invoices || []} />;\n}\n","import React, { ReactElement, useCallback, useState } from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { InvoicingInvoiceForm } from 'components/invoicing';\nimport { Translate } from 'components/i18n';\nimport { Invoice, WithoutId } from 'data/invoicing/types';\nimport { createInvoice } from 'data/invoicing/actions';\nimport { navigateTo } from '../pageRoutes';\n\nexport default function InvoicingPageCreateInvoice(\n  props: RouteComponentProps\n): ReactElement {\n  const [error, setSerror] = useState<string | undefined>();\n  const [saving, setSaving] = useState(false);\n\n  const onCreate = useCallback((invoice: WithoutId<Invoice>) => {\n    setSaving(true);\n    createInvoice(invoice)\n      .then(() => {\n        navigateTo('/');\n      })\n      .catch((error) => {\n        setSerror(String(error));\n      });\n  }, []);\n\n  if (error) {\n    return <>{error}</>;\n  }\n\n  if (saving) {\n    return <Translate label=\"saving changes\" />;\n  }\n\n  return <InvoicingInvoiceForm onCreate={onCreate} />;\n}\n","import React, { ReactElement, useCallback, useState } from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport usePromise from 'react-use-promise';\n\nimport { InvoicingInvoiceForm } from 'components/invoicing';\nimport { loadInvoice, updateInvoice } from 'data/invoicing/actions';\nimport { Translate } from 'components/i18n';\nimport { Invoice } from 'data/invoicing/types';\nimport { navigateTo } from '../pageRoutes';\n\ninterface UrlParameters {\n  invoiceId: string;\n}\n\nexport default function InvoicingPageEditInvoice({\n  invoiceId: invoiceIdString,\n}: RouteComponentProps<UrlParameters>): ReactElement {\n  const invoiceId = Number(invoiceIdString);\n  const [existingInvoice, loadError] = usePromise(\n    () => loadInvoice(invoiceId),\n    [invoiceId]\n  );\n\n  const [saveError, setSaveSerror] = useState<string | undefined>();\n  const [saving, setSaving] = useState(false);\n\n  const onSaveChanges = useCallback((invoice: Invoice) => {\n    setSaving(true);\n    updateInvoice(invoice)\n      .then(() => {\n        navigateTo('/');\n      })\n      .catch((error) => {\n        setSaveSerror(String(error));\n      });\n  }, []);\n\n  if (loadError || saveError) {\n    return <>{String(loadError || saveError)}</>;\n  }\n  if (!existingInvoice || saving) {\n    return <Translate label=\"loading\" />;\n  }\n\n  if (loadError) {\n    return <>{'' + loadError}</>;\n  }\n\n  return (\n    <InvoicingInvoiceForm\n      existingInvoice={existingInvoice}\n      onSaveChanges={onSaveChanges}\n    />\n  );\n}\n","import React, { memo } from 'react';\nimport { Router } from '@reach/router';\n\nimport { classNames } from 'utilities';\n\nimport {\n  pageRoutes,\n  rootPathPrefix,\n} from 'components/invoicing/pages/pageRoutes';\n\nimport styles from './styles.module.css';\n\nexport interface Props {\n  className?: string;\n}\n\nfunction InvoicingMainContent({ className }: Props) {\n  return (\n    <main className={classNames(styles.main, className)}>\n      <Router basepath={rootPathPrefix}>\n        {pageRoutes.map(({ Component, defaultRoute, routingPath }, index) => (\n          <Component key={index} default={defaultRoute} path={routingPath} />\n        ))}\n      </Router>\n    </main>\n  );\n}\nexport default memo(InvoicingMainContent);\n","import React, { memo } from 'react';\n\nimport { classNames } from 'utilities';\nimport { useTranslation } from 'components/i18n';\nimport StyledLink from 'components/StyledLink';\nimport {\n  pageRoutes,\n  rootPathPrefix,\n} from 'components/invoicing/pages/pageRoutes';\n\nimport styles from './styles.module.css';\n\nexport interface Props {\n  className?: string;\n}\n\nfunction InvoicingNavMenu({ className }: Props) {\n  const translate = useTranslation();\n  return (\n    <nav className={classNames(styles.menu, className)}>\n      <ul>\n        {pageRoutes.map(\n          ({ navMenuLabel, navMenuLinkPath }, index) =>\n            navMenuLabel &&\n            navMenuLinkPath && (\n              <li key={index}>\n                <StyledLink\n                  activeClassName={styles.activeLink}\n                  className={styles.link}\n                  to={rootPathPrefix + navMenuLinkPath}\n                >\n                  {translate(navMenuLabel)}\n                </StyledLink>\n              </li>\n            )\n        )}\n      </ul>\n    </nav>\n  );\n}\n\nexport default memo(InvoicingNavMenu);\n","import React, { ReactElement } from 'react';\n\nimport { I18nProvider } from 'components/i18n';\nimport { ThemeProvider } from 'components';\n\nimport {\n  InvoicingHeader,\n  InvoicingMainContent,\n  InvoicingNavMenu,\n} from 'components/invoicing';\n\nimport styles from './styles.module.css';\n\nfunction App(): ReactElement {\n  return (\n    <I18nProvider>\n      <ThemeProvider>\n        <div className={styles.app}>\n          <div className={styles.headerAndMenu}>\n            <InvoicingHeader />\n            <InvoicingNavMenu />\n          </div>\n          <InvoicingMainContent />\n        </div>\n      </ThemeProvider>\n    </I18nProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister(): void {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport InvoicingApp from 'components/invoicing/InvoicingApp';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <InvoicingApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
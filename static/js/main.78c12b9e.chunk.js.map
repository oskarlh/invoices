{"version":3,"sources":["components/invoicing/InvoicingApp/styles.module.css","components/invoicing/InvoicingNavMenu/styles.module.css","components/SimpleTable/styles.module.css","components/invoicing/InvoicingHeader/styles.module.css","components/ThemeProvider/index.module.css","components/invoicing/InvoicingHeader/logo.svg","components/invoicing/InvoicingInvoiceForm/styles.module.css","components/invoicing/InvoicingList/styles.module.css","components/invoicing/InvoicingMainContent/styles.module.css","components/i18n/definitions.ts","components/i18n/translations.ts","components/i18n/I18nContext.ts","components/i18n/findPreferredLanguage.ts","components/i18n/I18nProvider.tsx","components/i18n/useTranslation.ts","components/i18n/useCurrentLanguage.ts","components/i18n/Translate.tsx","components/SimpleTable/helpers.tsx","utilities/index.ts","components/SimpleTable/index.tsx","components/ThemeProvider/index.tsx","components/invoicing/InvoicingHeader/index.tsx","components/invoicing/InvoicingInvoiceForm/index.tsx","components/invoicing/InvoicingList/index.tsx","data/invoicing/mockBackendApi.ts","data/invoicing/actions.ts","components/invoicing/pages/pageRoutes.ts","components/invoicing/pages/InvoicingPage404/index.tsx","components/invoicing/pages/InvoicingPageInvoiceList/index.tsx","components/invoicing/pages/InvoicingPageCreateInvoice/index.tsx","components/invoicing/InvoicingMainContent/index.tsx","components/invoicing/InvoicingNavMenu/index.tsx","components/invoicing/InvoicingApp/index.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","supportedLanguages","translations","en","sv","logo","I18nContext","createContext","displayName","findPreferredLanguage","navigator","languages","languagePreference","language","startsWith","I18nProvider","children","forcedLanguage","useState","setLanguage","useEffect","onLanguageChange","globalThis","addEventListener","removeEventListener","Provider","value","useTranslation","useContext","useCallback","label","Translate","translate","rowElementKey","row","idKey","index","result","undefined","classNames","names","filter","n","join","typedMemo","memo","className","columns","rows","columnToSortBy","setColumnToSortBy","sortOrder","setSortOrder","sortRows","comparator","comparisonSpec","compare","key","a","b","Number","customComparator","sort","createRowSorter","styles","table","map","column","activeColumnHeading","onClick","onColumnHeadingClick","heading","tableBody","rowIndex","columnIndex","cell","String","Cell","ThemeProvider","themeProvider","InvoicingHeader","header","src","alt","InvoicingInvoiceForm","invoice","handleSubmit","event","preventDefault","data","FormData","target","alert","console","log","container","onSubmit","type","currency","sum","lineItems","reduce","total","baseValue","count","invoices","initialStorage","id","description","recipient","nextId","loadStorage","json","localStorage","getItem","JSON","parse","loadList","listName","loadInvoiceList","pageRoutes","Component","props","defaultRoute","routingPath","usePromise","invoicesError","navMenuLabel","navMenuLinkPath","main","default","path","getLinkProps","isCurrent","link","activeLink","menu","getProps","to","App","app","headerAndMenu","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","InvoicingApp","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.78c12b9e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"styles_app__2kGhL\",\"header\":\"styles_header__2Flqj\",\"headerAndMenu\":\"styles_headerAndMenu__KiQ_A\",\"main\":\"styles_main__1gW_0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"styles_menu__3pfnh\",\"link\":\"styles_link__DZOza\",\"activeLink\":\"styles_activeLink__22bo6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"styles_table__3ShGV\",\"activeColumnHeading\":\"styles_activeColumnHeading__3jYNk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__3GNOB\",\"logo\":\"styles_logo__3vo9k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeProvider\":\"ThemeProvider_themeProvider__1hUB0\"};","module.exports = __webpack_public_path__ + \"static/media/logo.29e71b12.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1Ddpw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2CYxk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__EEBhq\"};","import * as data from './translations';\n\nexport type Language = typeof data.supportedLanguages[number];\nexport type TextsByLanguage = Record<Language, string>;\nexport type Label = keyof typeof data.translations;\nexport type TranslationsMap = Record<Label, TextsByLanguage>;\n\nexport const fallbackLanguage: Language = data.fallbackLanguage;\nexport const supportedLanguages: readonly Language[] = data.supportedLanguages;\nexport const translations: TranslationsMap = data.translations;\n","// All supported languages\nexport const supportedLanguages = ['en', 'sv'] as const;\n\n// Language to use if no supported language is found in navigator.languages\nexport const fallbackLanguage = 'en';\n\n// All translations\nexport const translations = {\n  'invoicing/app name': {\n    en: 'Invoicing App 1.0',\n    sv: 'Faktureringsapp 1.0',\n  },\n  'invoicing/create invoice': {\n    en: 'Create Invoice',\n    sv: 'Skapa faktura',\n  },\n  'invoicing/invoices': {\n    en: 'Invoices',\n    sv: 'Fakturor',\n  },\n  'invoicing/page not found': {\n    en: 'Page not found',\n    sv: 'Sidan kunde inte hittas',\n  },\n  'invoicing/total': {\n    en: 'Total',\n    sv: 'Att betala',\n  },\n  logo: {\n    en: 'Logo',\n    sv: 'Logga',\n  },\n} as const;\n","import { createContext } from 'react';\nimport { fallbackLanguage } from './definitions';\n\nconst I18nContext = createContext(fallbackLanguage);\nI18nContext.displayName = 'I18nContext';\nexport default I18nContext;\n","import { fallbackLanguage, supportedLanguages, Language } from './definitions';\n\nexport default function findPreferredLanguage(): Language {\n  for (const languagePreference of navigator.languages) {\n    for (const language of supportedLanguages) {\n      if (languagePreference.startsWith(language)) {\n        return language;\n      }\n    }\n  }\n  return fallbackLanguage;\n}\n","import React, { ReactElement, ReactNode, useEffect, useState } from 'react';\nimport I18nContext from './I18nContext';\nimport { Language } from './definitions';\nimport findPreferredLanguage from './findPreferredLanguage';\n\nexport interface Props {\n  children: ReactNode;\n  language?: Language;\n}\n\nexport default function I18nProvider({\n  children,\n  language: forcedLanguage,\n}: Props): ReactElement {\n  const [language, setLanguage] = useState(() => findPreferredLanguage());\n\n  // Change language if the user changes language preferences in their browser settings\n  useEffect(() => {\n    const onLanguageChange = () => {\n      setLanguage(findPreferredLanguage());\n    };\n    globalThis.addEventListener('languagechange', onLanguageChange);\n    return () =>\n      globalThis.removeEventListener('languagechange', onLanguageChange);\n  }, []);\n\n  return (\n    <I18nContext.Provider value={forcedLanguage || language}>\n      {children}\n    </I18nContext.Provider>\n  );\n}\n","import { useCallback } from 'react';\nimport useCurrentLanguage from './useCurrentLanguage';\nimport { translations, Label } from './definitions';\n\nexport default function useTranslation(): (label: Label) => string {\n  const language = useCurrentLanguage();\n  return useCallback(\n    (label: Label): string => {\n      return translations[label][language];\n    },\n    [language]\n  );\n}\n","import { useContext } from 'react';\nimport I18nContext from './I18nContext';\nimport { Language } from './definitions';\n\nexport default function useCurrentLanguage(): Language {\n  return useContext(I18nContext);\n}\n","import React from 'react';\nimport { Label } from './definitions';\nimport useTranslation from './useTranslation';\n\nexport interface Props {\n  label?: Label;\n}\n\nexport default function Translate({ label }: Props) {\n  const translate = useTranslation();\n  return <>{label && translate(label)}</>;\n}\n","import { SimpleTableColumn } from './types';\n\nexport function rowElementKey<Row>(\n  row: Row,\n  idKey: keyof Row | undefined,\n  index: number\n) {\n  let result: number | string = index;\n  if (idKey !== undefined) {\n    const value: any = row[idKey];\n    if (value || value === '' || value === 0) {\n      result = 'u' + row[idKey];\n    }\n  }\n  return result;\n}\n\nexport function createRowSorter<Row>(\n  columnToSortBy: SimpleTableColumn<Row> | undefined,\n  sortOrder: -1 | 1\n) {\n  let sortRows = (rows: Row[]) => rows;\n  if (columnToSortBy) {\n    const { compare: comparisonSpec } = columnToSortBy;\n\n    let comparator: (a: Row, b: Row) => number;\n    if (typeof comparisonSpec === 'string') {\n      const key = comparisonSpec as keyof Row;\n      comparator = (a: Row, b: Row) =>\n        sortOrder * (Number(a[key] > b[key]) - Number(a[key] < b[key]));\n    } else {\n      const customComparator = comparisonSpec as (a: Row, b: Row) => number;\n      comparator = (a: Row, b: Row) => sortOrder * customComparator(a, b);\n    }\n\n    sortRows = (rows: Row[]) => [...rows].sort(comparator);\n  }\n  return sortRows;\n}\n","import { memo } from 'react';\n\ntype ClassName = string | false | null | undefined;\nexport function classNames(...names: ClassName[]): string {\n  return names.filter((n) => !!n).join(' ');\n}\n\n// Can't just use memo straight with generic components.\n// memo doesn't work with generics\nexport const typedMemo: <T>(c: T) => T = memo;\n","import React, { ReactElement, useState } from 'react';\n\nimport { CellComponent, SimpleTableColumn, SimpleTableProps } from './types';\n\nimport styles from './styles.module.css';\nimport { createRowSorter, rowElementKey } from './helpers';\nimport { classNames, typedMemo } from 'utilities';\n\nfunction SimpleTable<Row>({\n  className,\n  columns,\n  rows,\n  idKey,\n}: SimpleTableProps<Row>): ReactElement {\n  const [columnToSortBy, setColumnToSortBy] = useState<\n    SimpleTableColumn<Row> | undefined\n  >();\n\n  const [sortOrder, setSortOrder] = useState<1 | -1>(1);\n\n  const onColumnHeadingClick = (column: SimpleTableColumn<Row>) => {\n    if (columnToSortBy !== column || sortOrder === 1) {\n      setColumnToSortBy(column);\n    } else {\n      setColumnToSortBy(undefined);\n    }\n    setSortOrder(columnToSortBy === column ? -1 : 1);\n  };\n\n  const sortRows = createRowSorter(columnToSortBy, sortOrder);\n\n  return (\n    <table className={classNames(styles.table, className)}>\n      <thead>\n        <tr>\n          {columns.map((column, index) => (\n            <td\n              className={\n                column === columnToSortBy ? styles.activeColumnHeading : ''\n              }\n              key={index}\n              onClick={() => onColumnHeadingClick(column)}\n            >\n              {typeof column.heading === 'string' ? (\n                column.heading\n              ) : (\n                <column.heading />\n              )}\n            </td>\n          ))}\n        </tr>\n      </thead>\n      <tbody className={styles.tableBody}>\n        {sortRows(rows).map((row, rowIndex) => (\n          <tr key={rowElementKey(row, idKey, rowIndex)}>\n            {columns.map(({ cell }, columnIndex) => (\n              <td key={columnIndex}>\n                {(() => {\n                  if (typeof cell === 'string') {\n                    return String(row[cell as keyof Row]);\n                  } else {\n                    const Cell = cell as CellComponent<Row>;\n                    return <Cell row={row} />;\n                  }\n                })()}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default typedMemo(SimpleTable);\n","import React, { ReactElement, ReactNode } from 'react';\nimport styles from './index.module.css';\n\nexport interface Props {\n  children: ReactNode;\n}\n\nexport default function ThemeProvider({ children }: Props): ReactElement {\n  return <div className={styles.themeProvider}>{children}</div>;\n}\n","import React from 'react';\n\nimport { classNames } from 'utilities';\nimport { useTranslation } from 'components/i18n';\n\nimport styles from './styles.module.css';\nimport logo from './logo.svg';\n\nexport interface Props {\n  className?: string;\n}\n\nexport default function InvoicingHeader({ className }: Props) {\n  const translate = useTranslation();\n  return (\n    <header className={classNames(styles.header, className)}>\n      <img src={logo} className={styles.logo} alt={translate('logo')} />\n      <h1>{translate('invoicing/app name')}</h1>\n    </header>\n  );\n}\n","import React, { useCallback } from 'react';\n\nimport { Invoice } from 'data/invoicing/types';\n\nimport styles from './styles.module.css';\n\nexport interface Props {\n  invoice?: Invoice;\n}\n\nfunction InvoicingInvoiceForm({ invoice }: Props) {\n  const handleSubmit = useCallback((event) => {\n    event.preventDefault();\n\n    const data = new FormData(event.target);\n    alert(data);\n    console.log(data);\n  }, []);\n\n  return (\n    <section className={styles.container}>\n      <form onSubmit={handleSubmit}>\n        <input type=\"number\" />\n        <input type=\"submit\" value=\"!\" />\n      </form>\n    </section>\n  );\n}\nexport default InvoicingInvoiceForm;\n","import React, { memo, ReactElement } from 'react';\n\nimport { Translate } from 'components/i18n';\nimport { Invoice } from 'data/invoicing/types';\n\nimport styles from './styles.module.css';\nimport { SimpleTable, SimpleTableColumn } from 'components';\n\nfunction InvoiceTotal({\n  row: { currency, lineItems },\n}: {\n  row: Invoice;\n}): ReactElement {\n  const sum = lineItems.reduce(\n    (total, { baseValue, count }) => total + count * baseValue,\n    0\n  );\n  return (\n    <>\n      {sum} {currency}\n    </>\n  );\n}\n\nconst columns: SimpleTableColumn<Invoice>[] = [\n  {\n    cell: InvoiceTotal,\n    compare: 'currency',\n    heading: () => <Translate label=\"invoicing/total\" />,\n  },\n];\n\nexport interface Props {\n  invoices: Invoice[];\n}\n\nfunction InvoicingList({ invoices }: Props) {\n  return (\n    <div className={styles.container}>\n      <SimpleTable<Invoice> columns={columns} rows={invoices} idKey=\"id\" />\n    </div>\n  );\n}\n\nexport default memo(InvoicingList);\n","import { HasId, Id, Invoice, WithoutId } from './types';\n\nconst localStorageKey = 'invoicing';\n\ninterface Storage {\n  nextId: Id;\n  invoices: Invoice[];\n}\n\nconst initialStorage: Storage = {\n  invoices: [\n    {\n      currency: 'SEK',\n      id: 451,\n      lineItems: [\n        {\n          baseValue: 40.5,\n          count: 10,\n          description: 'Potatoes',\n        },\n      ],\n      recipient: 'Example',\n    },\n  ],\n  nextId: 20380451,\n};\n\ntype ListName = Exclude<keyof Storage, 'nextId'>;\ntype ItemInList<LN extends ListName> = Storage[LN][Id];\n\nfunction loadStorage(): Storage {\n  const json = localStorage.getItem(localStorageKey);\n  return json ? JSON.parse(json) : initialStorage;\n}\n\nfunction saveStorage(storage: Storage) {\n  localStorage.setItem(localStorageKey, JSON.stringify(storage));\n}\n\nexport async function loadList<LN extends ListName>(\n  listName: LN\n): Promise<ItemInList<LN>[]> {\n  return loadStorage()[listName];\n}\n\nexport async function loadListItem<LN extends ListName>(\n  listName: LN,\n  id: Id\n): Promise<ItemInList<LN>> {\n  const itemInStorage: ItemInList<LN> | undefined = loadStorage()[listName][id];\n  if (!itemInStorage) {\n    throw new Error('Item not found');\n  }\n  return itemInStorage;\n}\n\nexport async function insertNewListItem<LN extends ListName>(\n  listName: LN,\n  item: WithoutId<ItemInList<LN>>\n): Promise<ItemInList<LN>> {\n  const storage = loadStorage();\n  const itemInStorage = {\n    ...item,\n    id: storage.nextId++,\n  };\n  storage[listName].push(itemInStorage);\n  saveStorage(storage);\n  return itemInStorage;\n}\n\nexport async function updateListItem<LN extends ListName>(\n  listName: LN,\n  item: Partial<ItemInList<LN>> & HasId\n): Promise<ItemInList<LN>> {\n  const storage = loadStorage();\n  const list = storage[listName];\n  const itemInStorage: ItemInList<LN> | undefined = list.find(\n    ({ id }) => id === item.id\n  );\n  if (!itemInStorage) {\n    throw new Error('Item not found');\n  }\n  Object.assign(itemInStorage, item);\n  saveStorage(storage);\n  return itemInStorage;\n}\n\nexport async function deleteListItem<LN extends ListName>(\n  listName: LN,\n  id: Id\n) {\n  const storage = loadStorage();\n  const list = storage[listName];\n  const index = list.findIndex((item) => item.id === id);\n  if (index === -1) {\n    throw new Error('Item not found');\n  }\n  list.splice(index, 1);\n}\n","import { Id, Invoice } from './types';\nimport { loadList, loadListItem } from './mockBackendApi';\n\nexport async function loadInvoice(id: Id): Promise<Invoice> {\n  return loadListItem('invoices', id);\n}\n\nexport async function loadInvoiceList(): Promise<Invoice[]> {\n  return loadList('invoices');\n}\n","import { ComponentType } from 'react';\nimport { RouteComponentProps } from '@reach/router';\n\nimport { Label } from 'components/i18n';\n\nimport InvoicingPage404 from './InvoicingPage404';\nimport InvoicingPageCreateInvoice from './InvoicingPageCreateInvoice';\nimport InvoicingPageInvoiceList from './InvoicingPageInvoiceList';\n\ninterface PageRoute {\n  Component: ComponentType<RouteComponentProps>;\n  defaultRoute?: boolean;\n  navMenuLabel?: Label;\n  navMenuLinkPath?: string;\n  routingPath: string;\n}\n\nexport const pageRoutes: readonly PageRoute[] = [\n  {\n    Component: InvoicingPage404,\n    defaultRoute: true,\n    routingPath: '404',\n  },\n  {\n    Component: InvoicingPageInvoiceList,\n    navMenuLabel: 'invoicing/invoices',\n    navMenuLinkPath: '/',\n    routingPath: '/',\n  },\n  {\n    Component: InvoicingPageCreateInvoice,\n    navMenuLabel: 'invoicing/create invoice',\n    navMenuLinkPath: '/create',\n    routingPath: '/create',\n  },\n];\n\nexport const rootPathPrefix = '/invoicing';\n","import React, { ReactElement } from 'react';\nimport { RouteComponentProps } from '@reach/router';\n\nimport { useTranslation } from 'components/i18n';\n\nexport default function InvoicingPageInvoiceList(props: RouteComponentProps): ReactElement {\n  const translate = useTranslation();\n  return <div>{translate('invoicing/page not found')}</div>;\n}\n","import React, { ReactElement, useState } from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport usePromise from 'react-use-promise';\n\nimport { InvoicingList } from 'components/invoicing';\nimport { Invoice } from 'data/invoicing/types';\nimport { loadInvoiceList } from 'data/invoicing/actions';\n\nimport styles from './index.module.css';\n\nexport default function InvoicingPageInvoiceList(\n  props: RouteComponentProps\n): ReactElement {\n  const [invoices, invoicesError] = usePromise(loadInvoiceList, []);\n\n  if (invoicesError) {\n    return <>{String(invoicesError)}</>;\n  }\n\n  return <InvoicingList invoices={invoices || []} />;\n}\n","import React, { ReactElement } from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { InvoicingInvoiceForm } from 'components/invoicing';\n\nimport styles from './index.module.css';\n\nexport default function InvoicingPageCreateInvoice(\n  props: RouteComponentProps\n): ReactElement {\n  return <InvoicingInvoiceForm />;\n}\n","import React, { memo } from 'react';\nimport { Router } from '@reach/router';\n\nimport { classNames } from 'utilities';\n\nimport {\n  pageRoutes,\n  rootPathPrefix,\n} from 'components/invoicing/pages/pageRoutes';\n\nimport styles from './styles.module.css';\n\nexport interface Props {\n  className?: string;\n}\n\nfunction InvoicingMainContent({ className }: Props) {\n  return (\n    <main className={classNames(styles.main, className)}>\n      <Router>\n        {pageRoutes.map(({ Component, defaultRoute, routingPath }, index) => (\n          <Component\n            key={index}\n            default={defaultRoute}\n            path={rootPathPrefix + routingPath}\n          />\n        ))}\n      </Router>\n    </main>\n  );\n}\nexport default memo(InvoicingMainContent);\n","import React, { memo } from 'react';\nimport { Link } from '@reach/router';\n\nimport { classNames } from 'utilities';\nimport { useTranslation } from 'components/i18n';\n\nimport {\n  pageRoutes,\n  rootPathPrefix,\n} from 'components/invoicing/pages/pageRoutes';\n\nimport styles from './styles.module.css';\n\nfunction getLinkProps({ isCurrent }: { isCurrent: boolean }) {\n  return { className: classNames(styles.link, isCurrent && styles.activeLink) };\n}\n\nexport interface Props {\n  className?: string;\n}\n\nfunction InvoicingNavMenu({ className }: Props) {\n  const translate = useTranslation();\n  return (\n    <nav className={classNames(styles.menu, className)}>\n      <ul>\n        {pageRoutes.map(\n          ({ navMenuLabel, navMenuLinkPath }, index) =>\n            navMenuLabel &&\n            navMenuLinkPath && (\n              <li key={index}>\n                <Link\n                  className={styles.link}\n                  getProps={getLinkProps}\n                  to={rootPathPrefix + navMenuLinkPath}\n                >\n                  {translate(navMenuLabel)}\n                </Link>\n              </li>\n            )\n        )}\n      </ul>\n    </nav>\n  );\n}\n\nexport default memo(InvoicingNavMenu);\n","import React, { ReactElement } from 'react';\n\nimport { I18nProvider } from 'components/i18n';\nimport { ThemeProvider } from 'components';\n\nimport {\n  InvoicingHeader,\n  InvoicingMainContent,\n  InvoicingNavMenu,\n} from 'components/invoicing';\n\nimport styles from './styles.module.css';\n\nfunction App(): ReactElement {\n  return (\n    <I18nProvider>\n      <ThemeProvider>\n        <div className={styles.app}>\n          <div className={styles.headerAndMenu}>\n            <InvoicingHeader className={styles.header} />\n            <InvoicingNavMenu className={styles.menu} />\n          </div>\n          <InvoicingMainContent className={styles.main} />\n        </div>\n      </ThemeProvider>\n    </I18nProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister(): void {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport InvoicingApp from 'components/invoicing/InvoicingApp';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <InvoicingApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}